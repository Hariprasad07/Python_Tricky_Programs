#input from user and create the list of the prime number with in mentioned upperlimit 
----------------------------------------------------------------------------------------------------------------------
upper=int(input("Enter the number"))
for n in range(0,upper+1):
	if n>1:
		for i in range(2,n):
			if(n%i)==0:
				break
			else:
				print(n)
				break

#2nd type
------------
upper=int(input("Enter the number"))
a=[2]
for n in range(0,upper+1):
	if n>1:
		for i in range(2,n):
			if(n%i)==0:
				a.append(n)
				print(a)
				break
			else:
				break
				


#program for leap year
--------------------------------
year=int(input("Enter the year"))
if (year %400==0 and year %100!=0 or year %4==0):
                 print (year ," is a leap year")
else:
                 print (year ," is not a leap year")

#even or odd
--------------------
a=int(input("enter a number"))

if(a%2==0):
	print(a,"is even")
else:
	print(a,"is odd")

'''program to calculate electricity bill
total=fixed_charge+addcharge
fixed_charge=500'''
--------------------------------------------------
units=int(input("enter the units used"))
fixed_charge=500
if(units>=1 and units<=200):
       charge=1.20*units
elif(units>200 and units<=400):
       charge=1.20*200+(units-200)*1.5
elif(units>400):
       charge=(1.20*200)+(1.5+200)+(units-400)*1.8
else:
       fixed_charge=500
       charge=0
total=charge+fixed_charge
print(total)

''' 
 car parking lot ticketing system

 C-car 0 to 3hrs minimum charge=60
 additional charge 20/1 extra hour B-bike 0 to 3hrs
 min charge=30 additional charge 10/extra hour
'''
-----------------------------------------------------------------------
entry_time=float(input("Enter the entry time in 24 hour format for example: 1:30pm as 13.30: "))
exit_time=float(input("Enter the exit time in 24 hour format for example: 1:30pm as 13.30: "))
veh=input("enter the vahicle type C for car and B for bike: ")
import math
tot=abs(exit_time-entry_time)
if veh.upper()=='C':
       if tot<=3.0:
             charge=60
       else:
              charge=30+10*(math.ceil(tot)-3.0)
if veh.upper()=='B':
       if tot<=3.0:
             charge=30
       else:
              charge=30+10*(math.ceil(tot)-3.0)
if veh.upper()=='C' or 'B':
           print(charge)
else:
           print("invalid type")

#swap without temp variable
----------------------------------------
int1 = int(input("Enter first number: "))
int2 = int(input("Enter second number: "))

print("Value of int1 after swapping: ", int1)
print("Value of int2 after swapping: ", int2)

int1 = int1 + int2
int2 = int1 - int2
int1 = int1 - int2

print("Value of int1 after swapping: ", int1)
print("Value of int2 after swapping: ", int2)

#find the sum and add and find max and min number
-------------------------------------------------------------------------
sum = 0
list = [11,22,33,44,55,66,77]
for num in list:
    sum = sum +num
print ("sum of list element is : ", sum)
print ("Maximum element is : ", max(list))
print ("Minimum element is : ", min(list))

#prime number or not
------------------------------
num = int(input("enter a number: "))
 
for i in range(2, num):
	if num % i  == 0:
		print("not prime number")
		break
else:
	print("prime number")

#Calculate the sum and average of a given list 
-----------------------------------------------------------------
sum = 0
list = [11,22,33,44,55,66,77]
for num in list:
    sum = sum +num
average  = sum / len(list)
print ("sum of list element is : ", sum)
print ("Average of list element is ", average )

#interchange the first and last values
---------------------------------------------------
List = [1, 2, 3, 4, 5, 6]   
print(List)
List[-1], List[0] = List[0], List[-1] 
print(List)


#Python Program to Print Fibonacci Series
-----------------------------------------
num = int(input("enter number of digits you want in series (minimum 2): "))

first = 0
second = 1

print("\nfibonacci series is:")
print(first, ",", second, end=", ")

for i in range(2, num):
	next = first + second
	print(next, end=", ")

	first = second
	second = next

#Python Program to Check Palindrome or Not
------------------------------------------
my_string=input("Enter string:")
if(my_string==my_string[::-1]):
   print("The string is a palindrome")
else:
   print("The string isn't a palindrome")

#sort operation in tuple
------------------------
tup = (3, 6, 8, 2, 78, 1, 23, 45, 9)
s=sorted(tup)
print("sorted elements are: ",s)

#concatination in tuple(+)
-------------------------
a=(1,2,3) #all the elements are stored inside the paranthesis "()"  
b=4,5,6 #or we can directly we can enter without paranthesis
print("concatination are: ",a+b)

#merge the two sorted tuple elements
------------------------------------
a = (3, 6, 8, 2, 78, 1, 23, 45, 9)
l=sorted(a)
print("sorted elements are: ",l)
b = (16, 18, 12, 11, 35)
m=sorted(b)
print("sorted elements are: ",m)
print("concatination are: ",l+m)

#count of elements operation in tuple
-------------------------------------
x=(10,20,10,10,30,40,50)
a=x.count(10)
print(a)

#suitcase weight
----------------
weight=int(input("Enter the weight of luggage"))
if weight>30:
   total=weight-30
   charge=total*100
   print("the total amount to be paid for the luggage is",charge)
else:
   print("no amount to be paid for the luggage")
   
2nd type:
---------
a=int(input("enter a value"))

if(a>=30):
        print(a,"suitecase weight is equal to 30kg")
elif(~-a):
        print(a,"suitcase is added extra kilos")
else:
        print("default value")

#Decorators
------------
# def div(a,b):
#     print(a/b)
#
# div(2,4)


# def div(a,b):
#     if a<b:
#         a,b = b,a
#     print(a/b)
#
# div(2,4)

def div(a,b):
    print(a/b)

def smart_div(func):

    def inner(a,b):

        if a<b:
            a,b = b,a
        return func(a,b)

    return inner

div = smart_div(div)

div(2,4)
---------------------------------------------------------
python program to check student is passed in all subject r not 
and the min pass marks is 33 
-----
li=[75,40,45,85]
#r(li)
def  r(li):
	for i in li:
		if i>=33:
			print("pass")
		else:
			print("fail")

def update_res(func):
	for m in li:
		if m>75:
			print("Distinction")
	return r(li)
update_res(li)

---------------------------------------------------------
python script to withdraw money from an ATM machine. 
If user exceeds the withdrawal amount morethan the 
available balance then raise insuffucient fund/balance error

x=input("enter if you want to with draw amt y/n: ")
if(x=="y"):
	try:    
		bal=int(input("Enter the amount"))
		while True:
			print("\n1 - View Balance \t 2 - Withdraw \t 3 - Exit ")
			sel = int(input("\nEnter your selection: "))
			if(sel==1):
				print(bal)
			elif(sel==2):
				wd_amt=int(input("Enter the amount to withdraw"))
				amt=bal-wd_amt
				print("your balance is: ",amt)
			elif(sel==3):
				exit()
	except:
		print("Thanks for choosing us as your bank")  
else:
	print("Good Bye")

-----------
2nd type:
-----------
bal=10000
def atm(x,y):
  return x-y
a=float(input("enter the amount to withdraw"))
if a>bal:
    try:
        raise("not posbl")
    except:
        print("balance is low")
else:
    print("ts!!!! and balnce rem is ",atm(bal,a))
    bal=bal-a
    while bal != 0:
        ques=input("do you wanna withdraw? y/n")
        
        if ques == 'y':
            am=float(input("enter the amount to withdraw"))
            
            
            if am>bal:
                try:
                    raise("not posbl")
                except:
                    print("balance is low")
            else:
                print(" balnce rem is ",atm(bal,am))
                
                bal=bal-am
        else:
            print("ty")

-----------------
#Guess a number and raise exception
class error(Exception):
	pass
class valueTooHigh(error):
	pass
class valueTooLow(error):
	pass

number=10
	
while True:
	num_i=int(input("Enter the number"))
	try:
		if(num_i<number):
			raise valueTooLow("value is low")
		elif(num_i>number):
			raise valueTooHigh("value is high")
		else:
			print("entered number is",num_i)
			exit()
	except(valueTooLow):
		print("low")
	except(valueTooHigh):
		print("high")
print("you have gathered the correct number")

----------------
#example for zerodivision error
x=10
y=0
try:
	if(y==0):
		raise ZeroDivisionError("Denominator cannot be zero")
		z=x/y
		print(z)
except:
	print("please enter a non-zero number")

#multiplicative inverse
a=['li',0,2]
for i in a:
	try:
		print("the entry is",i)
		r=1/i
		break
	except:
		print("an error has accured")
		print("Next entry")
print("reciprocal",r)

------------------
#cube of a number 
r=(lambda x: x*x*x) (10)
print(r)

#largest of 2 numbers
r1=(lambda a,b: a if(a>b) else b) (10,20)
print(r1)

#fractional number using lambda
a=5
r2=lambda a:1 if(a==0) else a * r2(a-1)
print(r2(a))

#-----------
#number which is not devisible by 2 
li=[10,2,3,6,9,11,15]
r3=filter(lambda x:x%2!=0,li)
print(list(r3))

#-----------
#a to the power of b
r4=lambda a,b: a**b
print(r4(10,3))

#----------
#print the string twice
li=['a','b','c']
l=list(map (x*x,li))
print(l)

-----------
l=[30,50,70,20,23]
result=list(filter(lambda a:a>=33,l))

a=result
if a==l:
	print("pass")        
else:
	print("fail",len(a))
			
